sap.ui.controller("zcls01_fragment.First", {

/**
* Called when a controller is instantiated and its View controls (if available) are already created.
* Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
* @memberOf zcls01_fragment.First
*/
//	onInit: function() {
//
//	},

/**
* Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
* (NOT before the first rendering! onInit() is used for that one!).
* @memberOf zcls01_fragment.First
*/
//	onBeforeRendering: function() {
//
//	},

/**
* Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
* This hook is the same one that SAPUI5 controls get after being rendered.
* @memberOf zcls01_fragment.First
*/
//	onAfterRendering: function() {
//
//	},

/**
* Called when the Controller is destroyed. Use this one to free resources and finalize activities.
* @memberOf zcls01_fragment.First
*/
//	onExit: function() {
//
//	}
	
	onPress:function(){
		debugger;
		
		/*this.dialog = sap.ui.xmlfragment("idfragment","fragments.form1");*/
		/*var oPage = this.getView().byId("id1");
		oPage.addContent(this.dialog);*/
	/*if( oPage !=
		undefined){
		oPage.addContent(this.dialog);
	}*/
		
		/*var oPage = this.getView().byId("id2");
		
		oPage.addContent(this.dialog);*/
		var list = this.getView().byId("id2");
		this.addExpFragment = sap.ui.xmlfragment("idFragment"+list.getItems.length,"fragments.form1",this);
		if(list.getItems().length<=2){
			list.addItem(new sap.m.CustomListItem({
				content:this.addExpFragment})
			);
			
			var sf = sap.ui.getCore().byId("idFragment"+list.getItems.length-1);
			sf.setTitle("Previous Employer"+(list.getItems.length-1));
		}
		else{
			sap.m.MessageToast.show("you cannot add more than 3 employeers")
		}
		
		/*if(this.getItems().length<=3){
			
			var oPage = this.getView().byId("id2");
			
			oPage.addContent(this.dialog);
			
		}*/
	},
	

 	handlePress:function(){
		
		/*var fragment = sap.ui.fragment("idfragment","fragment.Dialog")*/
		
		this.dialog = sap.ui.xmlfragment("idfragment","fragments.Dialog",this);
		
		this.dialog.open();
		
	},
	closeDialog: function() {
		this.dialog.close();
	}
	

});